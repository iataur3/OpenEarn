<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Users - EarnTask Admin</title>
    <link rel="stylesheet" href="./assets/css/admin.css" />
  </head>
  <body>
    <div class="topbar">
      <div class="left">
        <span class="menu-btn" id="menuBtn">&#9776;</span>
        <h3>Users Control Panel</h3>
      </div>
      <div class="right">
        <input type="text" id="searchInput" placeholder="Search users..." />
        <button id="searchBtn">Search</button>
        <button id="nightBtn">🌙</button>
      </div>
    </div>
    <!-- sidebar.html -->
    <div class="sidebar" id="sidebar">
      <a href="aDashboard.html" data-role="admin">Dashboard</a>
      <a href="userControl.html" data-role="admin">Users</a>
      <a href="runningTask.html" data-role="admin">Running Tasks</a>
      <a href="adminWT.html" data-role="admin">Admin Working Tasks</a>
      <a href="moderatorWT.html" data-role="admin">Moderator Working Tasks</a>
      <a href="userWT.html" data-role="admin">User Worked Tasks</a>
      <a href="reportsA.html" data-role="admin">Reports</a>
      <a href="ads.html" data-role="admin">Ads</a>
      <a href="adminPLI.html" data-role="admin">Login Info</a>
      <a href="settings.html" data-role="admin">Settings</a>
      <a href="index.html" data-role="admin">Logout</a>
    </div>
    <!-- main-content -->
    <div class="main-content">
      <h2>User Status</h2>
      <div class="status-buttons">
        <button class="status-button groupM">Moderator</button>
        <button class="status-button verified">General User</button>
        <button class="status-button waiting">Waiting KYC</button>
        <button class="status-button unverified">Unverified</button>
      </div>
      <h2>User List</h2>
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="userTableBody">
          <!-- JS will populate -->
        </tbody>
      </table>
    </div>

    <script>
      const sidebar = document.getElementById("sidebar");
      const menuBtn = document.getElementById("menuBtn");
      const nightBtn = document.getElementById("nightBtn");
      const searchBtn = document.getElementById("searchBtn");
      const searchInput = document.getElementById("searchInput");
      const userTableBody = document.getElementById("userTableBody");

      const users = [
        {
          id: 1,
          name: "John Doe",
          email: "john@example.com",
          phone: "+88012345678",
          status: "unverified",
        },
        {
          id: 2,
          name: "Jane Smith",
          email: "jane@example.com",
          phone: "+88087654321",
          status: "waiting",
        },
        {
          id: 3,
          name: "Rahim Uddin",
          email: "rahim@example.com",
          phone: "+88011223344",
          status: "verified",
        },
      ];

      function renderUsers(filterStatus = null) {
        userTableBody.innerHTML = "";
        users.forEach((user) => {
          if (filterStatus && user.status !== filterStatus) return;

          const row = document.createElement("tr");
          row.innerHTML = `
          <td>${user.id}</td>
          <td class="user-name">${user.name}</td>
          <td>${user.email}</td>
          <td>${user.phone}</td>
          <td>
            ${
              user.status === "waiting"
                ? `
              <button class="action approve" onclick="approveUser(${user.id})">Approve</button>
              <button class="action reject" onclick="rejectUser(${user.id})">Reject</button>
            `
                : ""
            }
          </td>
        `;
          userTableBody.appendChild(row);
        });

        document.querySelectorAll(".user-name").forEach((cell) => {
          cell.addEventListener("click", () => {
            const name = cell.textContent;
            alert(`🔍 Opening account for ${name}`);
            // window.location.href = `userAccount.html?name=${encodeURIComponent(name)}`;
          });
        });
      }

      function approveUser(id) {
        const user = users.find((u) => u.id === id);
        if (user) user.status = "verified";
        renderUsers("waiting");
      }

      function rejectUser(id) {
        const index = users.findIndex(
          (u) => u.id === id && u.status === "waiting"
        );
        if (index !== -1) users.splice(index, 1);
        renderUsers("waiting");
      }

      document
        .querySelector(".verified")
        .addEventListener("click", () => renderUsers("verified"));
      document
        .querySelector(".waiting")
        .addEventListener("click", () => renderUsers("waiting"));
      document
        .querySelector(".unverified")
        .addEventListener("click", () => renderUsers("unverified"));

      searchBtn.addEventListener("click", () => {
        const q = searchInput.value.trim().toLowerCase();
        document.querySelectorAll("tbody tr").forEach((row) => {
          const text = row.innerText.toLowerCase();
          row.style.display = text.includes(q) ? "" : "none";
        });
      });

      menuBtn.addEventListener("click", () => {
        window.innerWidth <= 768
          ? sidebar.classList.toggle("show")
          : sidebar.classList.toggle("hide");
      });

      document.addEventListener("click", (e) => {
        if (
          window.innerWidth <= 368 &&
          !sidebar.contains(e.target) &&
          !menuBtn.contains(e.target)
        ) {
          sidebar.classList.remove("show");
        }
      });

      nightBtn.addEventListener("click", () => {
        document.body.classList.toggle("night");
        nightBtn.textContent = document.body.classList.contains("night")
          ? "✨️"
          : "🌙";
      });

      document.addEventListener("DOMContentLoaded", () => {
        const role = sessionStorage.getItem("role");
        if (!role) {
          window.location.href = "index.html";
          return;
        }
        document.querySelectorAll("#sidebar a").forEach((link) => {
          const roleAttr = link.getAttribute("data-role");
          if (roleAttr) {
            const allowedRoles = roleAttr.split(",").map((r) => r.trim());
            if (!allowedRoles.includes(role)) {
              link.style.display = "none";
            }
          }
        });
        renderUsers(); // initial load
      });
    </script>
  </body>
</html>
